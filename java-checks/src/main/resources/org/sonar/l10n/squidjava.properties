rule.squid.ArchitecturalConstraint.name=Architectural constraint
rule.squid.ArchitecturalConstraint.param.fromClasses=Optional. If this property is not defined, all classes should adhere to this constraint. Ex : **.web.**
rule.squid.ArchitecturalConstraint.param.toClasses=Mandatory. Ex : java.util.Vector, java.util.Hashtable, java.util.Enumeration

rule.squid.AvoidBreakOutsideSwitch.name=Avoid using 'break' branching statement outside a 'switch' statement

rule.squid.AvoidContinueStatement.name=Avoid using 'continue' branching statement

rule.squid.CallToDeprecatedMethod.name=Avoid use of deprecated method

rule.squid.ClassCyclomaticComplexity.name=Avoid too complex class
rule.squid.ClassCyclomaticComplexity.param.max=Maximum complexity allowed.

rule.squid.EmptyFile.name=Empty file

rule.squid.MaximumInheritanceDepth.name=Avoid too deep inheritance tree
rule.squid.MaximumInheritanceDepth.param.max=Maximum depth of the inheritance tree.

rule.squid.MethodCyclomaticComplexity.name=Avoid too complex method
rule.squid.MethodCyclomaticComplexity.param.max=Maximum complexity allowed.

rule.squid.NoSonar.name=Avoid use of //NOSONAR marker

rule.squid.UndocumentedApi.name=Undocumented API
rule.squid.UndocumentedApi.param.forClasses=Optional. If this property is not defined, all classes should adhere to this constraint. Ex : **.api.**

rule.squid.UnusedPrivateMethod.name=Unused private method

rule.squid.UnusedProtectedMethod.name=Unused protected method

rule.squid.CommentedOutCodeLine.name=Avoid commented-out lines of code

rule.squid.CycleBetweenPackages.name=Avoid cycle between java packages

rule.squid.ParsingError.name=Java parser failure

rule.squid.MaximumLackOfCohesionOfMethods.name=Avoid too high LCOM4
rule.squid.MaximumLackOfCohesionOfMethods.param.max=Maximum LCOM4 allowed.

rule.squid.CallToFileDeleteOnExitMethod.name=Do not use File#deleteOnExit()

rule.squid.XPath.name=XPath rule
rule.squid.XPath.param.xpathQuery=The XPath query
rule.squid.XPath.param.message=The violation message

rule.squid.S00100.name=Method names should comply with a naming convention
rule.squid.S00100.param.format=Regular expression used to check the function names against.

rule.squid.S00101.name=Class names should comply with a naming convention
rule.squid.S00101.param.format=Regular expression used to check the class names against.

rule.squid.S00103.name=Lines of code should not be too long
rule.squid.S00103.param.maximumLineLength=The maximum authorized line length.

rule.squid.S00104.name=Files should not have too many lines of code
rule.squid.S00104.param.maximumFileLocThreshold=The maximum authorized lines of code.

rule.squid.S00105.name=Tabulation characters should not be used

rule.squid.S00107.name=Methods should not have too many parameters
rule.squid.S00107.param.maximumMethodParameters=The maximum authorized number of parameters.

rule.squid.S00108.name=Nested blocks of code should not be left empty

rule.squid.S00112.name=Generic exceptions Error, RuntimeException, Throwable and Exception should never be thrown

rule.squid.S00113.name=Files should contain an empty new line at the end

rule.squid.S00114.name=Interface names should comply with a naming convention
rule.squid.S00114.param.format=Regular expression used to check the interface names against.

rule.squid.S00115.name=Constant names should comply with a naming convention
rule.squid.S00115.param.format=Regular expression used to check the constant names against.

rule.squid.S00116.name=Field names should comply with a naming convention
rule.squid.S00116.param.format=Regular expression used to check the field names against.

rule.squid.S00117.name=Local variable names should comply with a naming convention
rule.squid.S00117.param.format=Regular expression used to check the local variable names against.

rule.squid.S00118.name=Abstract class names should comply with a naming convention
rule.squid.S00118.param.format=Regular expression used to check the abstract class names against.

rule.squid.S00119.name=Type parameter names should comply with a naming convention
rule.squid.S00119.param.format=Regular expression used to check the type parameter names against.

rule.squid.S00120.name=Package names should comply with a naming convention
rule.squid.S00120.param.format=Regular expression used to check the package names against.

rule.squid.S00121.name=if/else/for/while/do statements should always use curly braces

rule.squid.S00122.name=Statements should be on separate lines

rule.squid.LeftCurlyBraceStartLineCheck.name=Left curly braces should be located at the beginning of lines of code
rule.squid.RightCurlyBraceSameLineAsNextBlockCheck.name=Right curly brace and next 'else', 'catch' and 'finally' keywords should be located on the same line
rule.squid.RightCurlyBraceStartLineCheck.name=Right curly braces should be located at the beginning of lines of code
rule.squid.RightCurlyBraceDifferentLineAsNextBlockCheck.name=Right curly brace and next 'else', 'catch' and 'finally' keywords should be located on two different lines
rule.squid.StringBufferUsageCheck.name=StringBuilder should be used instead of StringBuffer
rule.squid.LeftCurlyBraceEndLineCheck.name=Left curly braces should be located at the end of lines of code
rule.squid.UselessParenthesesCheck.name=Useless parentheses around expressions should be removed to prevent any misunderstanding
rule.squid.ObjectFinalizeCheck.name=The Object.finalize() method should never be called
rule.squid.ObjectFinalizeOverridenCheck.name=The Object.finalize() method should never be overriden
rule.squid.ObjectFinalizeOverridenCallsSuperFinalizeCheck.name='super.finalize()' should be called at the end of Object.finalize() implementations
rule.squid.ClassVariableVisibilityCheck.name=Class variable fields should not have public accessibility
rule.squid.ForLoopCounterChangedCheck.name=Loop counters should not be assigned to from within the loop body
rule.squid.LabelsShouldNotBeUsedCheck.name=Labels should not be used
rule.squid.SwitchLastCaseIsDefaultCheck.name=Switch statements should end with a default case
rule.squid.EmptyStatementUsageCheck.name=Empty statements should be removed
rule.squid.ModifiersOrderCheck.name=Modifiers should be declared in the correct order
rule.squid.AssignmentInSubExpressionCheck.name=Assignments should not be made from within sub-expressions
rule.squid.StringEqualityComparisonCheck.name=Strings should be compared using equals()
rule.squid.TrailingCommentCheck.name=Comments should not be located at the end of lines of code
rule.squid.TrailingCommentCheck.param.legalCommentPattern=Pattern for text of trailing comments that are allowed.
rule.squid.UselessImportCheck.name=Useless imports should be removed
rule.squid.LowerCaseLongSuffixCheck.name=Long suffix 'L' should be upper case
rule.squid.RedundantThrowsDeclarationCheck.name=Throws declarations should not be redundant
rule.squid.HiddenFieldCheck.name=Local variables should not shadow class fields
rule.squid.MissingDeprecatedCheck.name=Deprecated elements should have both the annotation and the Javadoc tag
rule.squid.IndentationCheck.name=Source code should be correctly indented
rule.squid.IndentationCheck.param.indentationLevel=Number of spaces of an indentation level

rule.squid.S1133.name=Deprecated code should be removed eventually
rule.squid.S1134.name=FIXME tags should be handled
rule.squid.S1135.name=TODO tags should be handled
rule.squid.S1118.name=Utility classes should not have a public constructor
rule.squid.S1132.name=Strings literals should be placed on the left side when checking for equality
rule.squid.S1126.name=Return of boolean expressions should not be wrapped into an if-then-else statement
rule.squid.S1125.name=Boolean expressions should not be compared to true or false
rule.squid.S1067.name=Expressions should not be too complex
rule.squid.S1067.param.max=Maximum number of allowed conditional operators in an expression
rule.squid.S1141.name=Try-catch blocks should not be nested
rule.squid.S1147.name=System.exit(...) should not be called
rule.squid.S1143.name=Return statements should not occur in finally blocks
rule.squid.S1145.name=If statement's conditions should not always evaluate to 'true' or to 'false'
rule.squid.S1157.name=Case insensitive string comparisons should be made without intermediate upper or lower casing
rule.squid.S1142.name=Methods should not contain too many return statements
rule.squid.S1142.param.max=Maximum allowed return statements per method
rule.squid.S1155.name=Collection.isEmpty() should be used to test for emptiness
rule.squid.S1149.name=Synchronized classes Vector and Hashtable should not be used
rule.squid.S1171.name=Non-static class initializers should not be used
rule.squid.S1160.name=Public methods should throw at most one checked exception
rule.squid.S1168.name=Empty arrays and collections should be returned instead of null
rule.squid.S1170.name=Constants should be declared 'final static' rather than merely 'final'
rule.squid.S1156.name=Empty strings should not be concatenated
rule.squid.S1163.name=Exceptions should not be thrown in finally blocks
rule.squid.S106.name=System.out and System.err should not be used as loggers
rule.squid.S1173.name=Names should not be too short to be meaningful
rule.squid.S1164.name=Exceptions should not just only be caught and immediately rethrown
rule.squid.S1165.name=Exception classes should be immutable
rule.squid.S1066.name=Collapsible 'if' statements should be merged
rule.squid.S134.name=If statements should not be nested too deeply
rule.squid.S134.param.max=Maximum allowed if statements nesting depth
rule.squid.S1181.name=Throwable and Error classes should not be caught
rule.squid.S1150.name=Enumeration should not be implemented
